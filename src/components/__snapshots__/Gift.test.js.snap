// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Gifts renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Gift />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ForwardRef
        as="form"
        inline={false}
      >
        <ForwardRef
          as="div"
        >
          <ForwardRef
            column={false}
            srOnly={false}
          >
            Person
          </ForwardRef>
          <ForwardRef
            as="input"
            className="input-person"
            onChange={[Function]}
          />
        </ForwardRef>
      </ForwardRef>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "form",
        "children": <ForwardRef
          as="div"
        >
          <ForwardRef
            column={false}
            srOnly={false}
          >
            Person
          </ForwardRef>
          <ForwardRef
            as="input"
            className="input-person"
            onChange={[Function]}
          />
        </ForwardRef>,
        "inline": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "div",
          "children": Array [
            <ForwardRef
              column={false}
              srOnly={false}
            >
              Person
            </ForwardRef>,
            <ForwardRef
              as="input"
              className="input-person"
              onChange={[Function]}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Person",
              "column": false,
              "srOnly": false,
            },
            "ref": null,
            "rendered": "Person",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "column": false,
                "srOnly": false,
              },
              "displayName": "FormLabel",
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "input",
              "className": "input-person",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "Feedback": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "as": "div",
                  "type": "valid",
                },
                "displayName": "Feedback",
                "propTypes": Object {
                  "as": [Function],
                  "type": [Function],
                },
                "render": [Function],
              },
              "defaultProps": Object {
                "as": "input",
              },
              "displayName": "FormControl",
              "render": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "div",
          },
          "displayName": "FormGroup",
          "render": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "Check": Object {
          "$$typeof": Symbol(react.forward_ref),
          "Input": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "type": "checkbox",
            },
            "displayName": "FormCheckInput",
            "render": [Function],
          },
          "Label": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "type": "checkbox",
            },
            "displayName": "FormCheckLabel",
            "render": [Function],
          },
          "defaultProps": Object {
            "disabled": false,
            "inline": false,
            "isInvalid": false,
            "isValid": false,
            "title": "",
            "type": "checkbox",
          },
          "displayName": "FormCheck",
          "render": [Function],
        },
        "Control": Object {
          "$$typeof": Symbol(react.forward_ref),
          "Feedback": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
              "type": "valid",
            },
            "displayName": "Feedback",
            "propTypes": Object {
              "as": [Function],
              "type": [Function],
            },
            "render": [Function],
          },
          "defaultProps": Object {
            "as": "input",
          },
          "displayName": "FormControl",
          "render": [Function],
        },
        "Group": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "div",
          },
          "displayName": "FormGroup",
          "render": [Function],
        },
        "Label": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "column": false,
            "srOnly": false,
          },
          "displayName": "FormLabel",
          "render": [Function],
        },
        "Row": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "FormRow",
          "render": [Function],
        },
        "Text": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "small",
          },
          "displayName": "FormText",
          "render": [Function],
        },
        "defaultProps": Object {
          "as": "form",
          "inline": false,
        },
        "displayName": "Form",
        "render": [Function],
      },
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ForwardRef
          as="form"
          inline={false}
        >
          <ForwardRef
            as="div"
          >
            <ForwardRef
              column={false}
              srOnly={false}
            >
              Person
            </ForwardRef>
            <ForwardRef
              as="input"
              className="input-person"
              onChange={[Function]}
            />
          </ForwardRef>
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "form",
          "children": <ForwardRef
            as="div"
          >
            <ForwardRef
              column={false}
              srOnly={false}
            >
              Person
            </ForwardRef>
            <ForwardRef
              as="input"
              className="input-person"
              onChange={[Function]}
            />
          </ForwardRef>,
          "inline": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": Array [
              <ForwardRef
                column={false}
                srOnly={false}
              >
                Person
              </ForwardRef>,
              <ForwardRef
                as="input"
                className="input-person"
                onChange={[Function]}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Person",
                "column": false,
                "srOnly": false,
              },
              "ref": null,
              "rendered": "Person",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "column": false,
                  "srOnly": false,
                },
                "displayName": "FormLabel",
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "input",
                "className": "input-person",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "Feedback": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "as": "div",
                    "type": "valid",
                  },
                  "displayName": "Feedback",
                  "propTypes": Object {
                    "as": [Function],
                    "type": [Function],
                  },
                  "render": [Function],
                },
                "defaultProps": Object {
                  "as": "input",
                },
                "displayName": "FormControl",
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
            },
            "displayName": "FormGroup",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "Check": Object {
            "$$typeof": Symbol(react.forward_ref),
            "Input": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "type": "checkbox",
              },
              "displayName": "FormCheckInput",
              "render": [Function],
            },
            "Label": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "type": "checkbox",
              },
              "displayName": "FormCheckLabel",
              "render": [Function],
            },
            "defaultProps": Object {
              "disabled": false,
              "inline": false,
              "isInvalid": false,
              "isValid": false,
              "title": "",
              "type": "checkbox",
            },
            "displayName": "FormCheck",
            "render": [Function],
          },
          "Control": Object {
            "$$typeof": Symbol(react.forward_ref),
            "Feedback": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
                "type": "valid",
              },
              "displayName": "Feedback",
              "propTypes": Object {
                "as": [Function],
                "type": [Function],
              },
              "render": [Function],
            },
            "defaultProps": Object {
              "as": "input",
            },
            "displayName": "FormControl",
            "render": [Function],
          },
          "Group": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
            },
            "displayName": "FormGroup",
            "render": [Function],
          },
          "Label": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "column": false,
              "srOnly": false,
            },
            "displayName": "FormLabel",
            "render": [Function],
          },
          "Row": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "FormRow",
            "render": [Function],
          },
          "Text": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "small",
            },
            "displayName": "FormText",
            "render": [Function],
          },
          "defaultProps": Object {
            "as": "form",
            "inline": false,
          },
          "displayName": "Form",
          "render": [Function],
        },
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
